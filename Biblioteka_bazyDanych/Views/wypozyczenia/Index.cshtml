@using PagedList
@using PagedList.Mvc

@model IPagedList<Biblioteka_bazyDanych.wypozyczenia>

@{
    ViewBag.Title = "Index";
}

<h2>Wypożyczenia</h2>

<p>
    @Html.ActionLink("Dodaj wypożyczenie", "Create")
</p>
<p>
    @Html.ActionLink("Dodaj rezerwację", "Create2")
</p>

@using (Html.BeginForm("Index", "Wypozyczenia", FormMethod.Get))
{
    //the following are search options
    <b> Wyszukaj wg elementu: </b>
    @Html.DropDownList("option", null, htmlAttributes: new { @class = "form-controlSearch" })
    @Html.TextBox("search", null, htmlAttributes: new { @class = "form-controlSearch" }) <input type="submit" name="submit" value="Szukaj" />
}
<br />
@using (Html.BeginForm("Index", "Wypozyczenia", FormMethod.Get))
{
    //the following are search options
    <b> Wyszukaj wg daty pomiędzy: </b>
    @Html.TextBox("option1", "{date:dd/MM/yyyy}", new { type = "date", @class = "form-controlSearch" })
    <span>a</span> @Html.TextBox("option2", "{date:dd/MM/yyyy}", new { type = "date", @class = "form-controlSearch" })
    <input type="submit" name="submit" value="Szukaj" />
}
<br />
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("ID", "Index", new
                {
                    sort = ViewBag.SortByID,
                    option = Request.QueryString["option"],
                    option1 = Request.QueryString["option1"],
                    option2 = Request.QueryString["option2"],
                    search = Request.QueryString["search"]
                })
        </th>
        <th>
            @Html.ActionLink("Data zamówienia", "Index", new
                {
                    sort = ViewBag.SortByDateOrder,
                    option = Request.QueryString["option"],
                    option1 = Request.QueryString["option1"],
                    option2 = Request.QueryString["option2"],
                    search = Request.QueryString["search"]
                })
        </th>
        <th>
            @Html.ActionLink("Data wypożyczenia", "Index", new
                {
                    sort = ViewBag.SortByDateWith,
                    option = Request.QueryString["option"],
                    option1 = Request.QueryString["option1"],
                    option2 = Request.QueryString["option2"],
                    search = Request.QueryString["search"]
                })
        </th>
        <th>
            @Html.ActionLink("Data zwrotu", "Index", new
                {
                    sort = ViewBag.SortByDateTake,
                    option = Request.QueryString["option"],
                    option1 = Request.QueryString["option1"],
                    option2 = Request.QueryString["option2"],
                    search = Request.QueryString["search"]
                })
        </th>
        <th>
            @Html.ActionLink("Status", "Index", new
                {
                    sort = ViewBag.SortByStatus,
                    option = Request.QueryString["option"],
                    option1 = Request.QueryString["option1"],
                    option2 = Request.QueryString["option2"],
                    search = Request.QueryString["search"]
                })
        </th>
        <th>
            @Html.ActionLink("Czytelnik", "Index", new
                {
                    sort = ViewBag.SortByReader,
                    option = Request.QueryString["option"],
                    option1 = Request.QueryString["option1"],
                    option2 = Request.QueryString["option2"],
                    search = Request.QueryString["search"]
                })
        </th>
        <th>
            @Html.ActionLink("Książka", "Index", new
                {
                    sort = ViewBag.SortByBook,
                    option = Request.QueryString["option"],
                    option1 = Request.QueryString["option1"],
                    option2 = Request.QueryString["option2"],
                    search = Request.QueryString["search"]
                })
        </th>
        <th></th>
    </tr>

    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="8"> Brak wyników pasujących do kryterium wyszukiwania </td>
        </tr>
    }
    else
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.id_wypozyczenia)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.data_zamowienia)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.data_wypozyczenia)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.data_zwrotu)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.status)
                </td>
                <td>
                    @Html.ActionLink(item.czytelnicy.imie + " " + item.czytelnicy.nazwisko, "Details", "czytelnicy", new { id = item.id_czytelnika }, null)
                </td>
                <td>
                    @Html.ActionLink(item.ksiazki.tytul, "Details", "ksiazki", new { id = item.id_ksiazki }, null)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.id_wypozyczenia }) |
                    @Html.ActionLink("Details", "Details", new { id = item.id_wypozyczenia }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.id_wypozyczenia })
                </td>
            </tr>
        }
    }
</table>
